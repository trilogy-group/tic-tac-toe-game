name: Docker Image CI [arm64]

on:
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.ENG_STD_TOKEN }}

jobs:
  setup-build-publish:
    name: Build and Push Docker image to ECR
    if: github.repository != 'trilogy-group/cn-devflows-function-typescript-skeleton'
    runs-on: [self-hosted, linux, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEVFLOWS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEVFLOWS_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Compute Tag
        run: |
          SHA=`echo ${GITHUB_SHA} | cut -c1-7`
          echo "IMAGE_TAG=$(echo ${GITHUB_REF#refs/heads/}-${SHA}-arm64 | sed "s/[^[:alnum:]]/-/g")" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: devflows/${{ github.repository }}
        run: |
          aws s3 cp s3://devflows-function-framework/typescript/setup-arm64.sh ./.devflows/setup.sh
          chmod +x ./.devflows/setup.sh
          ./.devflows/setup.sh
          docker build -f .devflows/Dockerfile -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} --build-arg GITHUB_TOKEN --build-arg GITHUB_REPOSITORY --build-arg GITHUB_RUN_ID .
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}

      - name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
